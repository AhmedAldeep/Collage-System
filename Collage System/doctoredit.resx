<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuFlatButton2.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAflJREFUaEPt
        mA1NBDEQRk8CEpCAA5CAA3AADkACDsABOAAH4AAcgAOYF3aSSdPbbXudtnvZl3wptLDt2/5cYbexsbFx
        NJxIHiWvzqEP+nLjSfIhuXcOfdCXG28SOvKGPujLjU0kky4iHgfAp+Q7qKt6AMREVnkAxERWudw2kQp0
        ERn+AEgVGf4ASBWJ1XlAH/SVTYnIxRS4m8padd1EPOqaiXjSVIQybD8E+zzKZiKeNBWxa7oG3fbI0Yh4
        0lSEMmy38Ml8JUm9atjnUTYTWeJa8ivhHsXdKWcZNhVZ2iPMBCLkayq5IN5ITiUh3fbIkgiwvJBAisHf
        Tt8jxYxZuomkwMAYtJ2BM4nOVCijFIvw5t4lXOA0LIM5EcoUKWaAmQAVeJHoHlIZ+zzKIhGmHhl+WfMj
        CQdqRVLh53kpOhOXEiWUUYpFYsQGbetS9giwrOxMhMRkhhSBfW9eCdtZIQ//Xx7OkkguuTLVWDoAKHOl
        usikHgC5dJEJsUvL7hFmC1LrusvsE8mtg64yVqQGc4NlabMnXWRiB0BpGCjEZGijH/5Rx62gukzsACiN
        /ZywMlZiTnZYdLAsJysB/D3DiUm7veIMi8roJRNUgrsa+5PZWgV2GVkJ4PSjbTWojJWAZ0ns4jk0KsMJ
        dy5BIhRbDWxsNj5CzIRI7HZ/22Z8Y7X0on4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAs5JREFUaEPt
        mY1N3EAQha+ElJAS6CApIR1AB6GDpIOkA+gAOoAOQgekg6SDZL4TnzQ62WfvD7c+xJOe8Hm965ndNzO7
        ZveON4pPwR/Bh+Cv4L8X/gneBS+Dm8bnYDb8GHHyQ3BzuApq5O/gzyCOfQwKrnnub9BnWaGL4CbwJahh
        19xYAIY/Be0DcXA4noNrnchAWrdB+hI/efVODiWFnGpxH2QM5DgMvBwjvu9/1UFpsrLD8BjECAK7BYwB
        h0FHWjPPZhx5MyvS4gjZa7gjZhwCthZMAmNQW4aBbIURLVmL+sMY1JRhMHUisVooz6HV3YJIZa5Bjo8W
        eTbD2SzdnmQoT+JtGNzJtmzJDfYWeTbDFWmRhfIcGuwawYGqJljp4+65pn83ICnPFjhTCpIEfYfWEJEz
        T0mssD+jT8sRoDus8CXy8AgwNDYOYayg9zWrwjPKajNndmGs8EHhGHDCry2bWg2h5uExWDeoQSUxdVKU
        ODK0AC6hxJGhZ/Ql6AhxMvV5h3u0+dwmpZVjRPINGGMh14ftLeeYb0EyH2TsLsCJnImgxvoyf1M/PMfA
        mvR7E7S/bJmUvVTyoKRg5UJbdoDrLDcLIvdLNp2+L39Ddpxi8K8BvqjngWA+l3iEnWu3iEoMXIqZ7AQr
        mcdYvdXhJerSzgyIjLLRvMDMNEXacvuhDL8Gp3DoBOCv9qySFoNnB5AQs5FnMEvFZ7nHs3CuHWCQZxtI
        as4yXHJicYeAoVlCvIzZnIObR+jRFaOsGVPtGcQKEsky6eKEmYhB1gQkfVwBrrOGXcHcPgdXo9kJoBSY
        nbzMJcirWXrw6uIEhmuAg5QijyHXTkgXJ4CrsbrDBJbS7xy6OQHMIMcCewk5sOVUgGd0dQLY8RQU3Z0A
        +UWvTWA8dXViBEzTSu8snQAYi9Gka84rZ+kEoPJjeObZOQGo9BRejEdmtQX4HRvEbvcfeNuoHYNzCdcA
        AAAASUVORK5CYII=
</value>
  </data>
</root>